{"version":3,"sources":["components/Input.js","components/List.js","components/TodoList.js","index.js"],"names":["Input","htmlFor","value","this","props","inpValue","type","onChange","handleChange","onClick","addTodo","Component","List","arr1","todos","filter","item","done","length","renderTodos","style","color","TodoList","e","setState","target","state","title","delTodo","idx","index","toggle","newTodos","JSON","parse","stringify","map","todo","checked","localStorage","getItem","setItem","ReactDOM","render","document","getElementById"],"mappings":"2LAiBeA,E,uKAbP,OACI,6BACI,2BAAOC,QAAQ,OAAf,YACA,2BACIC,MAAOC,KAAKC,MAAMC,SAClBC,KAAK,OACLC,SAAUJ,KAAKC,MAAMI,eAEzB,4BAAQC,QAASN,KAAKC,MAAMM,SAA5B,qB,GAVIC,aCkBLC,E,uKAhBP,IAAIC,EAAOV,KAAKC,MAAMU,MAAMC,QAAQ,SAAAC,GAAI,OAAKA,EAAKC,QAElD,OACI,6BACI,uDAASJ,EAAKK,QACd,4BACKf,KAAKC,MAAMe,aAAY,IAE5B,wDACA,wBAAIC,MAAO,CAACC,MAAgB,UACvBlB,KAAKC,MAAMe,aAAY,S,GAZzBR,aCiGJW,E,kDA5FX,aAAc,IAAD,8BACT,gBAMJd,aAAe,SAACe,GACZ,EAAKC,SAAS,CAACnB,SAASkB,EAAEE,OAAOvB,SARxB,EAwBbQ,QAAU,WACmB,KAAtB,EAAKgB,MAAMrB,WACV,EAAKmB,SAAS,CACVV,MAAM,CACF,CACIa,MAAO,EAAKD,MAAMrB,SAClBY,MAAM,IAHT,mBAKE,EAAKS,MAAMZ,UAGtB,EAAKU,SAAS,CAACnB,SAAS,OAnCnB,EAsCbuB,QAAU,SAACC,GAIP,EAAKL,SAAS,CACVV,MAAO,EAAKY,MAAMZ,MAAMC,QAAO,SAACC,EAAKc,GAAN,OAAcA,GAAOD,QA3C/C,EAuDbE,OAAS,SAACD,GACN,IAAIE,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKT,MAAMZ,QACpDkB,EAASF,GAAOb,MAAQe,EAASF,GAAOb,KACxC,EAAKO,SAAS,CACVV,MAAOkB,KA3DF,EA8Dbb,YAAc,SAACF,GACX,OAAO,EAAKS,MAAMZ,MAAMsB,KAAI,SAACC,EAAKR,GAC9B,GAAGZ,GAAMoB,EAAKpB,KACV,OAAO,4BACH,2BACIR,QAAS,kBAAI,EAAKsB,OAAOF,IACzBS,QAASrB,EACTX,KAAK,aAET,8BAAO+B,EAAKV,OACZ,4BACIlB,QAAS,kBAAI,EAAKmB,QAAQC,KAD9B,qBAtEZ,EAAKH,MAAQ,CACTrB,SAAU,GACVS,MAAM,IAJD,E,gEAWT,IAAIA,EAAQyB,aAAaC,QAAQ,SAC9B1B,GACCX,KAAKqB,SAAS,CACVV,MAAOmB,KAAKC,MAAMpB,O,2CAK1ByB,aAAaE,QACT,QACAR,KAAKE,UAAUhC,KAAKuB,MAAMZ,U,+BA4DxB,IAAD,EACoBX,KAAKuB,MAAvBZ,EADF,EACEA,MAAMT,EADR,EACQA,SACb,OACI,6BACI,kBAAC,EAAD,CAAOA,SAAUA,EAAUG,aAAcL,KAAKK,aAAcE,QAASP,KAAKO,UAC1E,kBAAC,EAAD,CAAMI,MAAOA,EAAOK,YAAahB,KAAKgB,mB,GAvF/BR,aCDvB+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.acb611a2.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Input extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                <input \r\n                    value={this.props.inpValue} \r\n                    type=\"text\" \r\n                    onChange={this.props.handleChange}\r\n                />\r\n                <button onClick={this.props.addTodo}>添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Input;","import React, { Component } from 'react'\r\n\r\nclass List extends Component {\r\n    render() {\r\n        let arr1 = this.props.todos.filter( item => !item.done)\r\n        // console.log(arr1);\r\n        return (\r\n            <div>\r\n                <h2>正在进行{arr1.length}</h2>\r\n                <ul>\r\n                    {this.props.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成</h2>\r\n                <ul style={{color:3<2?'red':'green'}}>\r\n                    {this.props.renderTodos(true)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default List;","import React, { Component } from 'react';\r\nimport Input from './Input';\r\nimport List from './List';\r\n\r\n\r\n// 组件名首字母一定要大写\r\nclass TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue!==\"\"){\r\n            this.setState({\r\n                todos: [\r\n                    {\r\n                        title: this.state.inpValue,\r\n                        done: false\r\n                    },\r\n                    ...this.state.todos\r\n                ]\r\n            })\r\n            this.setState({inpValue:''});\r\n        }\r\n    }\r\n    delTodo = (idx)=>{\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        // newTodos.splice(idx,1);\r\n        // this.setState({todos:newTodos});\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n        // setState 是异步执行的，注意callback的用法\r\n        // this.setState({\r\n        //     todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        // },()=>{\r\n        //     localStorage.setItem(\r\n        //         'todos',\r\n        //         JSON.stringify(this.state.todos)\r\n        //     )\r\n        // });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span>{todo.title}</span>\r\n                    <button\r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const {todos,inpValue} = this.state;\r\n        return(\r\n            <div>\r\n                <Input inpValue={inpValue} handleChange={this.handleChange} addTodo={this.addTodo}/>\r\n                <List todos={todos} renderTodos={this.renderTodos}/>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Input from './components/Input';\nimport TodoList from './components/TodoList';\n\nReactDOM.render(\n  <TodoList/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}